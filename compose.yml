name: pad-ebank

services:
   account-service-db:
      image: postgres:17-alpine
      restart: no
      ports: [ "${ACCOUNT_SERVICE_DB_PORT}:5432" ]
      volumes: [ account-service-db-data:/var/lib/postgresql/data ]
      environment:
         POSTGRES_DB: account_db
         POSTGRES_USER: ${ACCOUNT_SERVICE_DB_USER}
         POSTGRES_PASSWORD: ${ACCOUNT_SERVICE_DB_PASSWORD}
      networks: [ ebank-network ]

   account-service:
      depends_on: [ account-service-db ]
      build:
         context: ${ACCOUNT_SERVICE_PATH}
      env_file: [ "${ACCOUNT_SERVICE_ENV_PATH}" ]
      restart: no
      scale: 1
      ports: [ "3000:3000", "3100:3100", "3200:3200" ]
      init: true
      networks: [ ebank-network ]

   account-service-unhealthy:
      depends_on: [ account-service-db ]
      build:
         context: ${ACCOUNT_SERVICE_PATH}
      env_file: [ "${ACCOUNT_SERVICE_ENV_PATH}" ]
      restart: no
      init: true
      environment:
         UNHEALTHY: true
      networks: [ ebank-network ]

   transaction-service:
      depends_on: [ transaction-service-db ]
      build:
         context: ${TRANSACTION_SERVICE_PATH}
      env_file: [ "${TRANSACTION_SERVICE_ENV_PATH}" ]
      init: true
      ports: [ "4000:3000", "4100:3100" ]
      networks: [ ebank-network ]

   transaction-service-db:
      image: postgres:17-alpine
      restart: no
      ports: [ "${TRANSACTION_SERVICE_DB_PORT}:5432" ]
      volumes: [ transaction-service-db-data:/var/lib/postgresql/data ]
      environment:
         POSTGRES_DB: transaction_db
         POSTGRES_USER: ${TRANSACTION_SERVICE_DB_USER}
         POSTGRES_PASSWORD: ${TRANSACTION_SERVICE_DB_PASSWORD}
      networks: [ ebank-network ]

   service-discovery:
      build:
         context: ${SERVICE_DISCOVERY_PATH}
         dockerfile: Dockerfile
      tty: true
      restart: no
      env_file: [ "${SERVICE_DISCOVERY_ENV_PATH}" ]
      ports: [ "5000:3000" ]
      networks: [ ebank-network ]

   gateway:
      build:
         context: ${GATEWAY_PATH}
         dockerfile: Dockerfile
      tty: true
      restart: no
      env_file: [ "${GATEWAY_ENV_PATH}" ]
      ports: [ "7000:3000" ]
      networks: [ ebank-network ]

   prometheus:
      image: prom/prometheus
      restart: no
      ports: [ "9090:9090" ]
      volumes:
         - ./config/prometheus/:/etc/prometheus/
         - prometheus-data:/prometheus
      networks: [ ebank-network ]

   grafana:
      image: grafana/grafana
      restart: no
      ports: [ "10000:3000" ]
      volumes: [ grafana-data:/var/lib/grafana/ ]
      environment:
         - GF_SECURITY_ADMIN_USER=${GRAFANA_USER}
         - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
      depends_on: [ prometheus ]
      networks: [ ebank-network ]

   redis-node-1:
      image: redis:alpine
      command: redis-server /usr/local/etc/redis/redis.conf --requirepass ${REDIS_PASSWORD}
      ports: [ "6379:6379" ]
      volumes: [ ./config/redis:/usr/local/etc/redis ]
      networks: [ ebank-network ]

   redis-node-2:
      image: redis:alpine
      command: redis-server /usr/local/etc/redis/redis.conf --requirepass ${REDIS_PASSWORD}
      ports: [ "6380:6379" ]
      volumes: [ ./config/redis:/usr/local/etc/redis ]
      networks: [ ebank-network ]

   redis-node-3:
      image: redis:alpine
      command: redis-server /usr/local/etc/redis/redis.conf --requirepass ${REDIS_PASSWORD}
      ports: [ "6381:6379" ]
      volumes: [ ./config/redis:/usr/local/etc/redis ]
      networks: [ ebank-network ]

   redis-node-4:
      image: redis:alpine
      command: redis-server /usr/local/etc/redis/redis.conf --requirepass ${REDIS_PASSWORD} --masterauth ${REDIS_PASSWORD}
      ports: [ "6382:6379" ]
      volumes: [ ./config/redis:/usr/local/etc/redis ]
      networks: [ ebank-network ]

   redis-node-5:
      image: redis:alpine
      command: redis-server /usr/local/etc/redis/redis.conf --requirepass ${REDIS_PASSWORD} --masterauth ${REDIS_PASSWORD}
      ports: [ "6383:6379" ]
      volumes: [ ./config/redis:/usr/local/etc/redis ]
      networks: [ ebank-network ]

   redis-node-6:
      image: redis:alpine
      command: redis-server /usr/local/etc/redis/redis.conf --requirepass ${REDIS_PASSWORD} --masterauth ${REDIS_PASSWORD}
      ports: [ "6384:6379" ]
      volumes: [ ./config/redis:/usr/local/etc/redis ]
      networks: [ ebank-network ]

   redis-cluster-creator:
      image: redis:alpine
      command: >
         redis-cli
         -a ${REDIS_PASSWORD}
         --cluster create
         redis-node-1:6379 redis-node-2:6379 redis-node-3:6379 redis-node-4:6379 redis-node-5:6379 redis-node-6:6379
         --cluster-replicas 1
         --cluster-yes
      depends_on:
         - redis-node-1
         - redis-node-2
         - redis-node-3
         - redis-node-4
         - redis-node-5
         - redis-node-6
      networks: [ ebank-network ]

volumes:
   account-service-db-data: { }
   transaction-service-db-data: { }
   prometheus-data: { }
   grafana-data: { }

networks:
   ebank-network: { }
